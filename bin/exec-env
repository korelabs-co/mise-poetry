#!/usr/bin/env bash

set -euo pipefail

# shellcheck source-path=.
source "$MISE_PLUGIN_PATH/bin/utils.sh"

setup_virtualenv() {
  # if `uv` is being used, exit early and let the user manage venv activation
  if [[ -f "uv.lock" ]]; then
    return
  fi

  VIRTUAL_ENV="$(poetry_venv)"
  if [[ -z "$VIRTUAL_ENV" ]] || [[ ! -d "$VIRTUAL_ENV" ]]; then
    if [[ "${MISE_POETRY_AUTO_INSTALL:-}" != "true" ]] && [[ "${MISE_POETRY_AUTO_INSTALL:-}" != "1" ]]; then
      echoerr "mise-poetry: Virtualenv does not exist at $VIRTUAL_ENV. Execute \`poetry install\` to create one."
      return
    fi
    echoerr "mise-poetry: No virtualenv exists. Executing \`poetry install\` to create one."
    poetry_bin install
    VIRTUAL_ENV="$(poetry_bin env info --path)"
  fi

  POETRY_ACTIVE=1
  MISE_ADD_PATH="$VIRTUAL_ENV/bin"
  export VIRTUAL_ENV POETRY_ACTIVE MISE_ADD_PATH
}

setup_virtualenv
